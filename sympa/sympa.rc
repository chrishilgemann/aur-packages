#!/bin/bash

. /etc/rc.conf
. /etc/rc.d/functions

# Sympa parameters
# Sympa binaries directory
sympadir="/srv/sympa/bin"

# Sympa config files directory
sympaconf="/srv/sympa/etc/sympa.conf"
wwsympaconf="/srv/sympa/etc/wwsympa.conf"

# Current state of the module
sympa_status() {
    # First try "/u1/home/sympa/*.pid" files
    if [ -f /srv/sympa/$1.pid ] ; then
          pid=`head -1 /srv/sympa/$1.pid`
          if [ "$pid" != "" ] ; then
			  running=`ps -A | sed 's/^ *//' | cut -d ' ' -f 1 | grep -x "$pid"`
              if [ "$running" != "" ]; then
                  echo "$1 (pid $pid) is active..."
                  return 0
              else
                  echo "$1 died, pid file remains."
                  return 1
              fi
          fi
     fi
     echo "$1 is stopped."
     return 3
}

# Start a module
sympa_module_start() {
	$sympadir/$1.pl $startparam
	return $?
}

# Test state of module before startup
sympa_start() {
	sympa_status $1 > /dev/null
	case "$?" in
		3)
			stat_busy "Starting $1"
			sympa_module_start $1 && stat_done || stat_fail
			;;
		1)
			stat_busy "Starting $1, overwriting old pid file."
			sympa_module_start $1 && stat_done || stat_fail
			;;
		0)
			stat_fail
			echo "$1 seems active. No action will be taken."
			echo "Try \"/etc/rc.d/sympa status\" or \"/etc/rc.d/sympa restart"\".
			;;
	esac
}

# Stop a module
sympa_stop() {
	if [ -f /srv/sympa/$1.pid ]; then
		stat_busy "Stopping module $1.pl"
		pid=`head -1 /srv/sympa/$1.pid`
		running=`ps -A | sed 's/^ *//' | cut -d ' ' -f 1 | grep -x "$pid"`
		if [ $1 == 'bulk' ]; then
			kill -TERM $pid && stat_done || stat_fail
		else
		    if [ "$running" != "" ]; then
			    kill -TERM $pid && stat_done || stat_fail
		    else
				stat_fail
		    fi
		fi
	else
	    echo "Module $1.pl not running"
	fi
}

# See how we were called.
case "$1" in
  start)
	if [ ! -f /srv/sympa/var/lock/subsys/sympa ]; then
		echo "Starting Sympa subsystem: "
		sympa_start sympa
		sympa_start bulk
		sympa_start archived
		sympa_start bounced
		sympa_start task_manager
		touch /srv/sympa/var/lock/subsys/sympa
		add_daemon sympa
	else
		echo "Sympa seems active. No action will be taken."
		echo "Try \"sympa status\" or \"sympa restart"\".
	fi
	;;
  stop)
	echo "Stopping Sympa subsystem: "
	sympa_stop bounced
	sympa_stop archived
	sympa_stop bulk
	sympa_stop sympa
	if [ -f /srv/sympa/sympa-distribute.pid ]; then
		sympa_stop sympa-distribute
	fi
	if [ -f /srv/sympa/sympa-creation.pid ]; then
		sympa_stop sympa-creation
	fi
	sympa_stop task_manager
	if [ -f /srv/sympa/var/lock/subsys/sympa ]; then
		rm -f /srv/sympa/var/lock/subsys/sympa
	fi
	rm_daemon sympa
	;;
  status)
	echo "Status of Sympa subsystem: "
	if [ -f /srv/sympa/var/lock/subsys/sympa ]; then
		echo "Status file for subsystem found."
	else
		echo "Status file for subsystem NOT found."
	fi
	sympa_status sympa
	sympa_status bulk
	sympa_status archived
	sympa_status bounced
	sympa_status task_manager
	;;
  restart)
	echo "Restarting Sympa subsystem: "
	$0 stop
	sleep 3
	$0 start
	echo
	;;
  *)
	echo "usage: $0 {start|stop|status|restart}"
	exit 1
	;;
esac
