#!/bin/sh

# This is an implementation of a start-script for Vuurmuur.
#
# (c) 2004-2006 Victor Julien, released under GPL.
# Adapted for Slackware by Nicolas Dejardin
# Adapted for ArchLinux by Phillip Smith
#

# Source Arch rc files
source /etc/rc.conf
source /etc/rc.d/functions

# where do the executables reside? NOTE: no trailing slash
VUURMUUR_LOCATION=/usr/bin

# space separated list of modules to load on start, or 'none' if none ;-)
MODULES_TO_LOAD="ip_tables iptable_filter iptable_mangle iptable_nat nf_conntrack ipt_state nf_conntrack_ftp nf_nat_ftp ip_queue"
#MODULES_TO_LOAD="none"

case "$1" in
	start)
		ERRSTAT=0
		
		# check if vuurmuur is configured
		if [ $ERRSTAT -eq 0 ] ; then
			IFNUM=`$VUURMUUR_LOCATION/vuurmuur_script --list --interface any | wc -l`
			if [ "$IFNUM" = "0" ]; then
				stat_busy "Starting vuurmuur firewall"
				stat_fail "FAILED: please configure Vuurmuur first by defining at least one interface."
				ERRSTAT=1
				exit 1
        	        fi
		fi
		
		if [ $ERRSTAT -eq 0 ] ; then
			if [ "$MODULES_TO_LOAD" != "none" ] ; then
				# load the modules
				for MODULE in `echo $MODULES_TO_LOAD` ; do
					MOD_LOADED=`modprobe -l $MODULE`
					if [ -z "$MOD_LOADED" ] ; then
						stat_busy "Loading kernel module: $MODULE"
						/sbin/modprobe $MODULE
						if [ $? -ne 0 ] ; then
							ERRSTAT=1
							stat_fail
						else
							stat_done
						fi
					fi
				done
			fi
		fi
		
		# start vuurmuur
		if [ $ERRSTAT -eq 0 ] ; then
			stat_busy "Starting vuurmuur firewall"
			if ck_daemon vuurmuur ; then
				$VUURMUUR_LOCATION/vuurmuur -l
				if [ $? -eq 0 ] ; then
					add_daemon vuurmuur
					stat_done
				else
					stat_fail
					ERRSTAT=1
				fi
			else
				stat_fail
				ERRSTAT=1
			fi
		fi
		
		# start vuurmuur_log
		if [ $ERRSTAT -eq 0 ] ; then
			stat_busy "Starting vuurmuur_log"
			if ck_daemon vuurmuur_log ; then
				$VUURMUUR_LOCATION/vuurmuur_log
				if [ $? -eq 0 ] ; then
					stat_done
				else
					stat_fail
					ERRSTAT=1
				fi
			else
				stat_fail
				ERRSTAT=1
			fi
		fi
		;;
	stop)
		PID=`pidof -o %PPID $VUURMUUR_LOCATION/vuurmuur`
		stat_busy "Stopping vuurmuur"
		[ ! -z "$PID" ] && kill -n INT $PID &> /dev/null
		if [ $? -gt 0 ]; then
			stat_fail
		else
			rm /var/run/vuurmuur.pid
			rm_daemon vuurmuur
			stat_done
		fi

		PID=`pidof -o %PPID $VUURMUUR_LOCATION/vuurmuur_log`
		stat_busy "Stopping vuurmuur_log"
		[ ! -z "$PID" ] && kill -n INT $PID &> /dev/null
		if [ $? -gt 0 ]; then
			stat_fail
		else
			rm /var/run/vuurmuur.pid
			rm_daemon vuurmuur
			stat_done
		fi
		;;
	restart)
		$0 stop
		sleep 1
		$0 start
		;;
	*)
		echo "Usage: /etc/rc.d/vuurmuur {start|stop|restart}"
		exit 1
esac

exit 0
